[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "gamspy"
version = "1.0.1"
authors = [
  { name = "GAMS Development Corporation", email = "support@gams.com" },
]
readme = "README_PYPI.md"
description = "Python-based algebraic modeling interface to GAMS"
requires-python = ">=3.8"
license.file = "LICENSE"
keywords = ["Optimization", "GAMS"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Programming Language :: Python",
  "Topic :: Software Development",
  "Topic :: Scientific/Engineering",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
]
dependencies = [
  "gamsapi[transfer,control] == 47.6.0",
  "gamspy_base == 47.6.0",
  "pydantic >= 2.0",
  "certifi >= 2022.09.14",
  "urllib3 >= 2.0.7",
]

[project.urls]
homepage = "https://gams.com/sales/gamspy_facts/"
documentation = "https://gamspy.readthedocs.io/en/latest/user/index.html"
repository = "https://github.com/GAMS-dev/gamspy"
changelog = "https://github.com/GAMS-dev/gamspy/blob/develop/CHANGELOG.md"


[project.optional-dependencies]
dev = [
  "ruff >= 0.5.6", 
  "pre-commit >= 3.5.0",
  "mypy >= 1.11.1",
]

test = [
  "coverage[toml] >= 7.2.7",
  "openpyxl >= 3.1.2",
  "cerberus >= 1.3.5",
  "python-dotenv >= 1.0.0",
]
doc = [
  "sphinx>=7.1.2",
  "numpydoc>=1.5.0",
  "nbsphinx>=0.9.3",
  "sphinx_copybutton>=0.5.2",
  "ipykernel",
  "matplotlib>=3.7.3",
  "sphinx_design>=0.5.0",
  "pydata_sphinx_theme>=0.14.1",
  "plotly>=5.22.0",
  "kaleido>=0.2.1",
  "pytest>=8.2.1",
  "nbmake>=1.5.3",
  "openpyxl>=3.1.2",
]

[project.scripts]
gamspy = "gamspy._cli.cmdline:main"

[tool.mypy]
warn_unused_configs = true
follow_imports = "skip"
follow_imports_for_stubs = true
ignore_missing_imports = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.coverage.run]
omit = ["*/_cli/*.py", "__main__.py", "*__init__.py"]

[tool.coverage.report]
exclude_also = ["pragma: no cover", "if TYPE_CHECKING:", "if typing.TYPE_CHECKING:", "def __repr__"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "docs",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "_options.py"
]

# Same as PEP8.
line-length = 79
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = ["E203", "E501", "E701", "E741", "E743", "W605", "SIM105", "B028", "B006"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
