#### TESTS #####
dac-test-3.14:
  stage: test
  needs: [dac-cli-3.10]
  tags: [macos-arm64]
  script:
      if [ ! -f "${TMPDIR}uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | UV_INSTALL_DIR=${TMPDIR} INSTALLER_NO_MODIFY_PATH=1 sh
      fi
    - ${TMPDIR}uv python install 3.14 --install-dir ${TMPDIR}python3.14${CI_COMMIT_SHORT_SHA}
    - ${TMPDIR}uv venv -v "${TMPDIR}gamspy-env-test-3.14${CI_COMMIT_SHORT_SHA}" --python ${TMPDIR}python3.14${CI_COMMIT_SHORT_SHA}/cpython*
    - source "${TMPDIR}gamspy-env-test-3.14${CI_COMMIT_SHORT_SHA}"/bin/activate
    - ${TMPDIR}uv pip install .[dev,test] pip --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers
    - gamspy uninstall solver miles
    - COVERAGE_CORE=sysmon coverage run --source=gamspy -m pytest -x -v -s -m 'unit or integration or model_library or requires_license or doc' tests
    - coverage report -m --data-file=".coverage"
    - coverage xml --data-file=".coverage"
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-test-3.14${CI_COMMIT_SHORT_SHA}"

dac-test-3.13:
  stage: test
  needs: [dac-cli-3.10]
  tags: [macos-arm64]
  script:
    - |
      if [ ! -f "${TMPDIR}uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | UV_INSTALL_DIR=${TMPDIR} INSTALLER_NO_MODIFY_PATH=1 sh
      fi
    - ${TMPDIR}uv python install 3.13 --install-dir ${TMPDIR}python3.13${CI_COMMIT_SHORT_SHA}
    - ${TMPDIR}uv venv -v "${TMPDIR}gamspy-env-test-3.13${CI_COMMIT_SHORT_SHA}" --python ${TMPDIR}python3.13${CI_COMMIT_SHORT_SHA}/cpython*
    - source "${TMPDIR}gamspy-env-test-3.13${CI_COMMIT_SHORT_SHA}"/bin/activate
    - ${TMPDIR}uv pip install .[dev,test] pip --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers
    - gamspy uninstall solver miles
    - python -B -m pytest -x -v -s -m 'unit or integration or model_library or requires_license or doc' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-test-3.13${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

dac-test-3.12:
  stage: test
  needs: [dac-cli-3.10]
  tags: [macos-arm64]
  script:
    - |
      if [ ! -f "${TMPDIR}uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | UV_INSTALL_DIR=${TMPDIR} INSTALLER_NO_MODIFY_PATH=1 sh
      fi
    - ${TMPDIR}uv python install 3.12 --install-dir ${TMPDIR}python3.12${CI_COMMIT_SHORT_SHA}
    - ${TMPDIR}uv venv -v "${TMPDIR}gamspy-env-test-3.12${CI_COMMIT_SHORT_SHA}" --python ${TMPDIR}python3.12${CI_COMMIT_SHORT_SHA}/cpython*
    - source "${TMPDIR}gamspy-env-test-3.12${CI_COMMIT_SHORT_SHA}"/bin/activate
    - ${TMPDIR}uv pip install .[dev,test] pip --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers
    - gamspy uninstall solver miles
    - python -B -m pytest -x -v -s -m 'unit or integration or model_library or requires_license' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-test-3.12${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

dac-test-3.11:
  stage: test
  needs: [dac-cli-3.10]
  tags: [macos-arm64]
  script:
    - |
      if [ ! -f "${TMPDIR}uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | UV_INSTALL_DIR=${TMPDIR} INSTALLER_NO_MODIFY_PATH=1 sh
      fi
    - ${TMPDIR}uv python install 3.11 --install-dir ${TMPDIR}python3.11${CI_COMMIT_SHORT_SHA}
    - ${TMPDIR}uv venv -v "${TMPDIR}gamspy-env-test-3.11${CI_COMMIT_SHORT_SHA}" --python ${TMPDIR}python3.11${CI_COMMIT_SHORT_SHA}/cpython*
    - source "${TMPDIR}gamspy-env-test-3.11${CI_COMMIT_SHORT_SHA}"/bin/activate
    - ${TMPDIR}uv pip install .[dev,test] pip --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers
    - gamspy uninstall solver miles
    - python -B -m pytest -x -v -s -m 'unit or integration or model_library or requires_license' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-test-3.11${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

dac-test-3.10:
  stage: test
  needs: [dac-cli-3.10]
  tags: [macos-arm64]
  script:
    - |
      if [ ! -f "${TMPDIR}uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | UV_INSTALL_DIR=${TMPDIR} INSTALLER_NO_MODIFY_PATH=1 sh
      fi
    - ${TMPDIR}uv python install 3.10 --install-dir ${TMPDIR}python3.10${CI_COMMIT_SHORT_SHA}
    - ${TMPDIR}uv venv -v "${TMPDIR}gamspy-env-test-3.10${CI_COMMIT_SHORT_SHA}" --python ${TMPDIR}python3.10${CI_COMMIT_SHORT_SHA}/cpython*
    - source "${TMPDIR}gamspy-env-test-3.10${CI_COMMIT_SHORT_SHA}"/bin/activate
    - ${TMPDIR}uv pip install .[dev,test] pip --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers
    - gamspy uninstall solver miles
    - python -B -m pytest -x -v -s -m 'unit or integration or model_library or requires_license' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-test-3.10${CI_COMMIT_SHORT_SHA}"

#### ENGINE #####
dac-engine-3.14:
  stage: engine
  when: manual
  needs: []
  allow_failure: true
  tags: [macos-arm64]
  script:
    - |
      if [ ! -f "${TMPDIR}uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | UV_INSTALL_DIR=${TMPDIR} INSTALLER_NO_MODIFY_PATH=1 sh
      fi
    - ${TMPDIR}uv python install 3.14 --install-dir ${TMPDIR}python3.14engine${CI_COMMIT_SHORT_SHA}
    - ${TMPDIR}uv venv -v "${TMPDIR}gamspy-env-engine-3.14${CI_COMMIT_SHORT_SHA}" --python ${TMPDIR}python3.14engine${CI_COMMIT_SHORT_SHA}/cpython*
    - source "${TMPDIR}gamspy-env-engine-3.14${CI_COMMIT_SHORT_SHA}"/bin/activate
    - ${TMPDIR}uv pip install .[dev,test] pip --force-reinstall
    - python -B -m pytest -x -v -s -m 'engine' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-engine-3.14${CI_COMMIT_SHORT_SHA}"

dac-engine-3.10:
  stage: engine
  when: manual
  needs: []
  allow_failure: true
  tags: [macos-arm64]
  script:
    - |
      if [ ! -f "${TMPDIR}uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | UV_INSTALL_DIR=${TMPDIR} INSTALLER_NO_MODIFY_PATH=1 sh
      fi
    - ${TMPDIR}uv python install 3.10 --install-dir ${TMPDIR}python3.10engine${CI_COMMIT_SHORT_SHA}
    - ${TMPDIR}uv venv -v "${TMPDIR}gamspy-env-engine-3.10${CI_COMMIT_SHORT_SHA}" --python ${TMPDIR}python3.10engine${CI_COMMIT_SHORT_SHA}/cpython*
    - source "${TMPDIR}gamspy-env-engine-3.10${CI_COMMIT_SHORT_SHA}"/bin/activate
    - ${TMPDIR}uv pip install .[dev,test] pip --force-reinstall
    - python -B -m pytest -x -v -s -m 'engine' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-engine-3.10${CI_COMMIT_SHORT_SHA}"

#### NEOS #####
dac-neos-3.14:
  stage: neos
  when: manual
  needs: []
  allow_failure: true
  tags: [macos-arm64]
  script:
    - |
      if [ ! -f "${TMPDIR}uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | UV_INSTALL_DIR=${TMPDIR} INSTALLER_NO_MODIFY_PATH=1 sh
      fi
    - ${TMPDIR}uv python install 3.14 --install-dir ${TMPDIR}python3.14neos${CI_COMMIT_SHORT_SHA}
    - ${TMPDIR}uv venv -v "${TMPDIR}gamspy-env-neos-3.14${CI_COMMIT_SHORT_SHA}" --python ${TMPDIR}python3.14neos${CI_COMMIT_SHORT_SHA}/cpython*
    - source "${TMPDIR}gamspy-env-neos-3.14${CI_COMMIT_SHORT_SHA}"/bin/activate
    - ${TMPDIR}uv pip install .[dev,test] pip --force-reinstall
    - python -B -m pytest -x -v -s -m 'neos' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-neos-3.14${CI_COMMIT_SHORT_SHA}"

dac-neos-3.10:
  stage: neos
  when: manual
  needs: []
  allow_failure: true
  tags: [macos-arm64]
  script:
    - |
      if [ ! -f "${TMPDIR}uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | UV_INSTALL_DIR=${TMPDIR} INSTALLER_NO_MODIFY_PATH=1 sh
      fi
    - ${TMPDIR}uv python install 3.10 --install-dir ${TMPDIR}python3.10neos${CI_COMMIT_SHORT_SHA}
    - ${TMPDIR}uv venv -v "${TMPDIR}gamspy-env-neos-3.10${CI_COMMIT_SHORT_SHA}" --python ${TMPDIR}python3.10neos${CI_COMMIT_SHORT_SHA}/cpython*
    - source "${TMPDIR}gamspy-env-neos-3.10${CI_COMMIT_SHORT_SHA}"/bin/activate
    - ${TMPDIR}uv pip install .[dev,test] pip --force-reinstall
    - python -B -m pytest -x -v -s -m 'neos' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-neos-3.10${CI_COMMIT_SHORT_SHA}"
