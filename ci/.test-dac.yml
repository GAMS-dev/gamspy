#### TESTS #####
dac-test-3.13:
  stage: test
  needs: [dac-cli-3.9]
  tags: [macos-arm64]
  script:
    - eval "$($MINICONDA shell.bash hook)"
    - ulimit -n 10240
    - python scripts/atomic_conda_create.py "gamspy-env-3.13${CI_COMMIT_SHORT_SHA}" python=3.13
    - conda activate "$(pwd)/gamspy-env-3.13${CI_COMMIT_SHORT_SHA}"
    - python -m pip install wheel build
    - python -m pip install .[dev,test] --force-reinstall
    - gamspy install solver mpsge scip reshop
    - coverage run --source=gamspy -m pytest -x -v -s -m 'unit or integration or model_library or doc' tests
    - coverage report -m --data-file=".coverage"
    - coverage xml --data-file=".coverage"
  artifacts:
    name: macos_arm64_3.13
    expire_in: 2 hours
    paths: [dist/*]

dac-test-3.12:
  stage: test
  needs: [dac-cli-3.9]
  tags: [macos-arm64]
  script:
    - eval "$($MINICONDA shell.bash hook)"
    - ulimit -n 10240
    - python scripts/atomic_conda_create.py "gamspy-env-3.12${CI_COMMIT_SHORT_SHA}" python=3.12
    - conda activate "$(pwd)/gamspy-env-3.12${CI_COMMIT_SHORT_SHA}"
    - python -m pip install wheel build
    - python -m pip install .[dev,test] --force-reinstall
    - gamspy install solver mpsge scip reshop
    - pytest -x -v -s -m 'unit or integration or model_library' tests
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

dac-test-3.11:
  stage: test
  needs: [dac-cli-3.9]
  tags: [macos-arm64]
  script:
    - eval "$($MINICONDA shell.bash hook)"
    - ulimit -n 10240
    - python scripts/atomic_conda_create.py "gamspy-env-3.11${CI_COMMIT_SHORT_SHA}" python=3.11
    - conda activate "$(pwd)/gamspy-env-3.11${CI_COMMIT_SHORT_SHA}"
    - python -m pip install wheel build
    - python -m pip install .[dev,test] --force-reinstall
    - gamspy install solver mpsge scip reshop
    - pytest -x -v -s -m 'unit or integration or model_library' tests
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

dac-test-3.10:
  stage: test
  needs: [dac-cli-3.9]
  tags: [macos-arm64]
  script:
    - eval "$($MINICONDA shell.bash hook)"
    - ulimit -n 10240
    - python scripts/atomic_conda_create.py "gamspy-env-3.10${CI_COMMIT_SHORT_SHA}" python=3.10
    - conda activate "$(pwd)/gamspy-env-3.10${CI_COMMIT_SHORT_SHA}"
    - python -m pip install wheel build
    - python -m pip install .[dev,test] --force-reinstall
    - gamspy install solver mpsge scip reshop
    - pytest -x -v -s -m 'unit or integration or model_library' tests
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never


dac-test-3.9:
  stage: test
  needs: [dac-cli-3.9]
  tags: [macos-arm64]
  script:
    - eval "$($MINICONDA shell.bash hook)"
    - ulimit -n 10240
    - python scripts/atomic_conda_create.py "gamspy-env-3.9${CI_COMMIT_SHORT_SHA}" python=3.9
    - conda activate "$(pwd)/gamspy-env-3.9${CI_COMMIT_SHORT_SHA}"
    - python -m pip install wheel build
    - python -m pip install .[dev,test] --force-reinstall
    - gamspy install solver mpsge scip reshop
    - pytest -x -v -s -m 'unit or integration or model_library' tests
    - pytest -x -v -s -m 'doc'

#### ENGINE #####
dac-engine-3.13:
  stage: engine
  when: manual
  needs: []
  tags: [macos-arm64]
  script:
    - eval "$($MINICONDA shell.bash hook)"
    - ulimit -n 10240
    - python scripts/atomic_conda_create.py "gamspy-env-3.13${CI_COMMIT_SHORT_SHA}" python=3.13
    - conda activate "$(pwd)/gamspy-env-3.13${CI_COMMIT_SHORT_SHA}"
    - python -m pip install wheel build
    - python -m pip install .[dev,test] --force-reinstall
    - pytest -x -v -s -m 'engine' tests

dac-engine-3.9:
  stage: engine
  when: manual
  needs: []
  tags: [macos-arm64]
  script:
    - eval "$($MINICONDA shell.bash hook)"
    - ulimit -n 10240
    - python scripts/atomic_conda_create.py "gamspy-env-3.9${CI_COMMIT_SHORT_SHA}" python=3.9
    - conda activate "$(pwd)/gamspy-env-3.9${CI_COMMIT_SHORT_SHA}"
    - python -m pip install wheel build
    - python -m pip install .[dev,test] --force-reinstall
    - pytest -x -v -s -m 'engine' tests

#### NEOS #####
dac-neos-3.13:
  stage: neos
  when: manual
  needs: []
  tags: [macos-arm64]
  script:
    - eval "$($MINICONDA shell.bash hook)"
    - ulimit -n 10240
    - python scripts/atomic_conda_create.py "gamspy-env-3.13${CI_COMMIT_SHORT_SHA}" python=3.13
    - conda activate "$(pwd)/gamspy-env-3.13${CI_COMMIT_SHORT_SHA}"
    - python -m pip install wheel build
    - python -m pip install .[dev,test] --force-reinstall
    - pytest -x -v -s -m 'neos' tests

dac-neos-3.9:
  stage: neos
  when: manual
  needs: []
  tags: [macos-arm64]
  script:
    - eval "$($MINICONDA shell.bash hook)"
    - ulimit -n 10240
    - python scripts/atomic_conda_create.py "gamspy-env-3.9${CI_COMMIT_SHORT_SHA}" python=3.9
    - conda activate "$(pwd)/gamspy-env-3.9${CI_COMMIT_SHORT_SHA}"
    - python -m pip install wheel build
    - python -m pip install .[dev,test] --force-reinstall
    - pytest -x -v -s -m 'neos' tests
