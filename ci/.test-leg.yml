#### TESTS #####
leg-test-3.13:
  stage: test
  needs: [leg-cli-3.9]
  tags: [linux]
  image: python:3.13
  script:
    - python -m pip install uv && uv venv venv313 && source venv313/bin/activate
    - uv pip install .[dev,test,torch] --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers --use-uv
    - gamspy uninstall solver miles --use-uv
    - COVERAGE_CORE=sysmon coverage run --source=gamspy -m pytest -x -v -s -m 'unit or integration or model_library or requires_license or doc' tests
    - coverage report -m --data-file=".coverage"
    - coverage xml --data-file=".coverage"
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  coverage: '/TOTAL.*\s+(\d+\%)/'

leg-test-3.12:
  stage: test
  needs: [leg-cli-3.9]
  tags: [linux]
  image: python:3.12
  script:
    - python -m pip install uv && uv venv venv312 && source venv312/bin/activate
    - uv pip install .[dev,test] --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers --use-uv
    - gamspy uninstall solver miles --use-uv
    - python -m pytest -x -v -s -m 'unit or integration or model_library or requires_license' tests
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

leg-test-3.11:
  stage: test
  needs: [leg-cli-3.9]
  tags: [linux]
  image: python:3.11
  script:
    - python -m pip install uv && uv venv venv311 && source venv311/bin/activate
    - uv pip install .[dev,test] --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers --use-uv
    - gamspy uninstall solver miles --use-uv
    - python -m pytest -x -v -s -m 'unit or integration or model_library or requires_license' tests
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

leg-test-3.10:
  stage: test
  needs: [leg-cli-3.9]
  tags: [linux]
  image: python:3.10
  script:
    - python -m pip install uv && uv venv venv310 && source venv310/bin/activate
    - uv pip install .[dev,test] --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers --use-uv
    - gamspy uninstall solver miles --use-uv
    - python -m pytest -x -v -s -m 'unit or integration or model_library or requires_license' tests
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

leg-test-3.9:
  stage: test
  needs: [leg-cli-3.9]
  tags: [linux]
  image: python:3.9
  script:
    - python -m pip install uv && uv venv venv39 && source venv39/bin/activate
    - uv pip install .[dev,test] --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers --use-uv
    - gamspy uninstall solver miles --use-uv
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@git.gams.com/miro/miro.git --branch gamspy --single-branch miro
    - if [ "$RUN_MIRO" == "1" ]; then pip install fastapi && cd miro && ./scripts/test_gamspy_models.sh && cd .. && rm -rf miro; fi
    - python -m pytest -x -v -s -m 'unit or integration or model_library or requires_license' tests
    - python -m pytest -x -v -s -m 'doc'

#### ENGINE #####
leg-engine-3.13:
  stage: engine
  when: manual
  needs: []
  tags: [linux]
  image: python:3.13
  script:
    - python -m pip install uv && uv venv venv313 && source venv313/bin/activate
    - uv pip install .[dev,test] --force-reinstall
    - python -m pytest -x -v -s -m 'engine' tests

leg-engine-3.9:
  stage: engine
  when: manual
  needs: []
  tags: [linux]
  image: python:3.9
  script:
    - python -m pip install uv && uv venv venv39 && source venv39/bin/activate
    - uv pip install .[dev,test] --force-reinstall
    - python -m pytest -x -v -s -m 'engine' tests

#### NEOS #####
leg-neos-3.13:
  stage: neos
  when: manual
  needs: []
  tags: [linux]
  image: python:3.13
  script:
    - python -m pip install uv && uv venv venv313 && source venv313/bin/activate
    - uv pip install .[dev,test] --force-reinstall
    - python -m pytest -x -v -s -m 'neos' tests

leg-neos-3.9:
  stage: neos
  when: manual
  needs: []
  tags: [linux]
  image: python:3.9
  script:
    - python -m pip install uv && uv venv venv39 && source venv39/bin/activate
    - uv pip install .[dev,test] --force-reinstall
    - python -m pytest -x -v -s -m 'neos' tests
