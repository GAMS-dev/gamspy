#### TESTS #####
deg-test-3.13:
  stage: test
  needs: [deg-cli-3.9]
  tags: [macos]
  script:
    - |
      if [ ! -f "$HOME/.local/bin/uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | sh
      fi
    - source $HOME/.local/bin/env
    - uv venv "${TMPDIR}gamspy-env-test-3.13${CI_COMMIT_SHORT_SHA}" --python 3.13
    - source "${TMPDIR}gamspy-env-test-3.13${CI_COMMIT_SHORT_SHA}"/bin/activate
    - uv pip install .[dev,test] pip --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers --use-uv
    - gamspy uninstall solver miles --use-uv
    - COVERAGE_CORE=sysmon coverage run --source=gamspy -m pytest -x -v -s -m 'unit or integration or model_library or requires_license or doc' tests
    - coverage report -m --data-file=".coverage"
    - coverage xml --data-file=".coverage"
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-test-3.13${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

deg-test-3.12:
  stage: test
  needs: [deg-cli-3.9]
  tags: [macos]
  script:
    - |
      if [ ! -f "$HOME/.local/bin/uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | sh
      fi
    - source $HOME/.local/bin/env
    - uv venv "${TMPDIR}gamspy-env-test-3.12${CI_COMMIT_SHORT_SHA}" --python 3.12
    - source "${TMPDIR}gamspy-env-test-3.12${CI_COMMIT_SHORT_SHA}"/bin/activate
    - uv pip install .[dev,test] pip --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers --use-uv
    - gamspy uninstall solver miles --use-uv
    - python -B -m pytest -x -v -s -m 'unit or integration or model_library or requires_license' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-test-3.12${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

deg-test-3.11:
  stage: test
  needs: [deg-cli-3.9]
  tags: [macos]
  script:
    - |
      if [ ! -f "$HOME/.local/bin/uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | sh
      fi
    - source $HOME/.local/bin/env
    - uv venv "${TMPDIR}gamspy-env-test-3.11${CI_COMMIT_SHORT_SHA}" --python 3.11
    - source "${TMPDIR}gamspy-env-test-3.11${CI_COMMIT_SHORT_SHA}"/bin/activate
    - uv pip install .[dev,test] pip --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers --use-uv
    - gamspy uninstall solver miles --use-uv
    - python -B -m pytest -x -v -s -m 'unit or integration or model_library or requires_license' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-test-3.11${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

deg-test-3.10:
  stage: test
  needs: [deg-cli-3.9]
  tags: [macos]
  script:
    - |
      if [ ! -f "$HOME/.local/bin/uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | sh
      fi
    - source $HOME/.local/bin/env
    - uv venv "${TMPDIR}gamspy-env-test-3.10${CI_COMMIT_SHORT_SHA}" --python 3.10
    - source "${TMPDIR}gamspy-env-test-3.10${CI_COMMIT_SHORT_SHA}"/bin/activate
    - uv pip install .[dev,test] pip --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers --use-uv
    - gamspy uninstall solver miles --use-uv
    - python -B -m pytest -x -v -s -m 'unit or integration or model_library or requires_license' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-test-3.10${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

deg-test-3.9:
  stage: test
  needs: [deg-cli-3.9]
  tags: [macos]
  script:
    - |
      if [ ! -f "$HOME/.local/bin/uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | sh
      fi
    - source $HOME/.local/bin/env
    - uv venv "${TMPDIR}gamspy-env-test-3.9${CI_COMMIT_SHORT_SHA}" --python 3.9
    - source "${TMPDIR}gamspy-env-test-3.9${CI_COMMIT_SHORT_SHA}"/bin/activate
    - uv pip install .[dev,test] pip --force-reinstall
    - $(gamspy show base)/gamsgetkey $LOCAL_LICENSE > $(gamspy show base)/ci_license.txt
    - gamspy install solver --install-all-solvers --use-uv
    - gamspy uninstall solver miles --use-uv
    - python -B -m pytest -x -v -s -m 'unit or integration or model_library or requires_license' tests
    - python -B -m pytest -x -v -s -m 'doc'
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-test-3.9${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

#### ENGINE ####
deg-engine-3.13:
  stage: engine
  when: manual
  needs: []
  tags: [macos]
  script:
    - |
      if [ ! -f "$HOME/.local/bin/uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | sh
      fi
    - source $HOME/.local/bin/env
    - uv venv "${TMPDIR}gamspy-env-engine-3.13${CI_COMMIT_SHORT_SHA}" --python 3.13
    - source "${TMPDIR}gamspy-env-engine-3.13${CI_COMMIT_SHORT_SHA}"/bin/activate
    - uv pip install .[dev,test] pip --force-reinstall
    - python -B -m pytest -x -v -s -m 'engine' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-engine-3.13${CI_COMMIT_SHORT_SHA}"

deg-engine-3.9:
  stage: engine
  when: manual
  needs: []
  tags: [macos]
  script:
    - |
      if [ ! -f "$HOME/.local/bin/uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | sh
      fi
    - source $HOME/.local/bin/env
    - uv venv "${TMPDIR}gamspy-env-engine-3.9${CI_COMMIT_SHORT_SHA}" --python 3.9
    - source "${TMPDIR}gamspy-env-engine-3.9${CI_COMMIT_SHORT_SHA}"/bin/activate
    - uv pip install .[dev,test] pip --force-reinstall
    - python -B -m pytest -x -v -s -m 'engine' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-engine-3.9${CI_COMMIT_SHORT_SHA}"

#### NEOS ####
deg-neos-3.13:
  stage: neos
  when: manual
  needs: []
  tags: [macos]
  script:
    - |
      if [ ! -f "$HOME/.local/bin/uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | sh
      fi
    - source $HOME/.local/bin/env
    - uv venv "${TMPDIR}gamspy-env-neos-3.13${CI_COMMIT_SHORT_SHA}" --python 3.13
    - source "${TMPDIR}gamspy-env-neos-3.13${CI_COMMIT_SHORT_SHA}"/bin/activate
    - uv pip install .[dev,test] pip --force-reinstall
    - python -B -m pytest -x -v -s -m 'neos' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-neos-3.13${CI_COMMIT_SHORT_SHA}"

deg-neos-3.9:
  stage: neos
  when: manual
  needs: []
  tags: [macos]
  script:
    - |
      if [ ! -f "$HOME/.local/bin/uv" ]; then
        curl -LsSf https://astral.sh/uv/install.sh | sh
      fi
    - source $HOME/.local/bin/env
    - uv venv "${TMPDIR}gamspy-env-neos-3.9${CI_COMMIT_SHORT_SHA}" --python 3.9
    - source "${TMPDIR}gamspy-env-neos-3.9${CI_COMMIT_SHORT_SHA}"/bin/activate
    - uv pip install .[dev,test] pip --force-reinstall
    - python -B -m pytest -x -v -s -m 'neos' tests
  after_script:
    - rm -rf "${TMPDIR}gamspy-env-neos-3.9${CI_COMMIT_SHORT_SHA}"
