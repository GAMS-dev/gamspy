#### TESTS #####
wei-test-3.13:
  stage: test
  needs: [wei-cli-3.9]
  tags: [windows]
  image:
    name: $MACHINES_CONTAINER_REG/wei/builder-full:latest
    entrypoint: [""]
  script:
    - conda create -y -n gamspy-env-3.13 python=3.13 -c conda-forge
    - conda env list
    - conda activate gamspy-env-3.13
    - $env:Path = "C:\Miniconda\envs\gamspy-env-3.13;C:\Miniconda\envs\gamspy-env-3.13\Scripts;" + $env:Path
    - python --version
    - python -m pip install .[dev,test] --force-reinstall
    - $basePath = & gamspy show base
    - '& "$basePath/gamsgetkey" $LOCAL_LICENSE | Out-File "$basePath/ci_license.txt"'
    - gamspy install solver mpsge scip reshop
    - coverage run --source=gamspy -m pytest -x -v -s -m 'unit or integration or model_library or doc' tests
    - coverage report -m --data-file=".coverage"
    - coverage xml --data-file=".coverage"

wei-test-3.12:
  stage: test
  needs: [wei-cli-3.9]
  tags: [windows]
  image:
    name: $MACHINES_CONTAINER_REG/wei/builder-full:latest
    entrypoint: [""]
  script:
    - conda create -y -n gamspy-env-3.12 python=3.12
    - conda env list
    - conda activate gamspy-env-3.12
    - $env:Path = "C:\Miniconda\envs\gamspy-env-3.12;C:\Miniconda\envs\gamspy-env-3.12\Scripts;" + $env:Path
    - python --version
    - python -m pip install .[dev,test] --force-reinstall
    - $basePath = & gamspy show base
    - '& "$basePath/gamsgetkey" $LOCAL_LICENSE | Out-File "$basePath/ci_license.txt"'
    - gamspy install solver mpsge scip reshop
    - pytest -x -v -s -m 'unit or integration or model_library' tests
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

wei-test-3.11:
  stage: test
  needs: [wei-cli-3.9]
  tags: [windows]
  image:
    name: $MACHINES_CONTAINER_REG/wei/builder-full:latest
    entrypoint: [""]
  script:
    - conda create -y -n gamspy-env-3.11 python=3.11
    - conda env list
    - conda activate gamspy-env-3.11
    - $env:Path = "C:\Miniconda\envs\gamspy-env-3.11;C:\Miniconda\envs\gamspy-env-3.11\Scripts;" + $env:Path
    - python --version
    - python -m pip install .[dev,test] --force-reinstall
    - $basePath = & gamspy show base
    - '& "$basePath/gamsgetkey" $LOCAL_LICENSE | Out-File "$basePath/ci_license.txt"'
    - gamspy install solver mpsge scip reshop
    - pytest -x -v -s -m 'unit or integration or model_library' tests
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

wei-test-3.10:
  stage: test
  needs: [wei-cli-3.9]
  tags: [windows]
  image:
    name: $MACHINES_CONTAINER_REG/wei/builder-full:latest
    entrypoint: [""]
  script:
    - conda create -y -n gamspy-env-3.10 python=3.10
    - conda env list
    - conda activate gamspy-env-3.10
    - $env:Path = "C:\Miniconda\envs\gamspy-env-3.10;C:\Miniconda\envs\gamspy-env-3.10\Scripts;" + $env:Path
    - python --version
    - python -m pip install .[dev,test] --force-reinstall
    - $basePath = & gamspy show base
    - '& "$basePath/gamsgetkey" $LOCAL_LICENSE | Out-File "$basePath/ci_license.txt"'
    - gamspy install solver mpsge scip reshop
    - pytest -x -v -s -m 'unit or integration or model_library' tests
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - when: never

wei-test-3.9:
  stage: test
  needs: [wei-cli-3.9]
  tags: [windows]
  image:
    name: $MACHINES_CONTAINER_REG/wei/builder-full:latest
    entrypoint: [""]
  script:
    - conda create -y -n gamspy-env-3.9 python=3.9
    - conda env list
    - conda activate gamspy-env-3.9
    - $env:Path = "C:\Miniconda\envs\gamspy-env-3.9;C:\Miniconda\envs\gamspy-env-3.9\Scripts;" + $env:Path
    - python --version
    - python -m pip install .[dev,test] --force-reinstall
    - $basePath = & gamspy show base
    - '& "$basePath/gamsgetkey" $LOCAL_LICENSE | Out-File "$basePath/ci_license.txt"'
    - gamspy install solver mpsge scip reshop
    - pytest -x -v -s -m 'unit or integration or model_library' tests
    - pytest -x -v -s -m 'doc'

#### ENGINE #####
wei-engine-3.13:
  stage: engine
  when: manual
  needs: []
  tags: [windows]
  image:
    name: $MACHINES_CONTAINER_REG/wei/builder-full:latest
    entrypoint: [""]
  script:
    - conda create -y -n gamspy-env-3.13 python=3.13 -c conda-forge
    - conda env list
    - conda activate gamspy-env-3.13
    - $env:Path = "C:\Miniconda\envs\gamspy-env-3.13;C:\Miniconda\envs\gamspy-env-3.13\Scripts;" + $env:Path
    - python --version
    - python -m pip install .[dev,test] --force-reinstall
    - pytest -x -v -s -m 'engine' tests

wei-engine-3.9:
  stage: engine
  when: manual
  needs: []
  tags: [windows]
  image:
    name: $MACHINES_CONTAINER_REG/wei/builder-full:latest
    entrypoint: [""]
  script:
    - conda create -y -n gamspy-env-3.9 python=3.9
    - conda env list
    - conda activate gamspy-env-3.9
    - $env:Path = "C:\Miniconda\envs\gamspy-env-3.9;C:\Miniconda\envs\gamspy-env-3.9\Scripts;" + $env:Path
    - python --version
    - python -m pip install .[dev,test] --force-reinstall
    - pytest -x -v -s -m 'engine' tests

#### NEOS #####
wei-neos-3.13:
  stage: neos
  when: manual
  needs: []
  tags: [windows]
  image:
    name: $MACHINES_CONTAINER_REG/wei/builder-full:latest
    entrypoint: [""]
  script:
    - conda create -y -n gamspy-env-3.13 python=3.13 -c conda-forge
    - conda env list
    - conda activate gamspy-env-3.13
    - $env:Path = "C:\Miniconda\envs\gamspy-env-3.13;C:\Miniconda\envs\gamspy-env-3.13\Scripts;" + $env:Path
    - python --version
    - python -m pip install .[dev,test] --force-reinstall
    - pytest -x -v -s -m 'neos' tests

wei-neos-3.9:
  stage: neos
  when: manual
  needs: []
  tags: [windows]
  image:
    name: $MACHINES_CONTAINER_REG/wei/builder-full:latest
    entrypoint: [""]
  script:
    - conda create -y -n gamspy-env-3.9 python=3.9
    - conda env list
    - conda activate gamspy-env-3.9
    - $env:Path = "C:\Miniconda\envs\gamspy-env-3.9;C:\Miniconda\envs\gamspy-env-3.9\Scripts;" + $env:Path
    - python --version
    - python -m pip install .[dev,test] --force-reinstall
    - pytest -x -v -s -m 'neos' tests
